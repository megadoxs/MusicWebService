services:
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_DB=user-db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pwd
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./user-service/src/main/resources/schema-postgresql.sql:/docker-entrypoint-initdb.d/1_schema.sql
      - ./user-service/src/main/resources/data-postgresql.sql:/docker-entrypoint-initdb.d/2_data.sql
    #      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD","pg_isready", "-U",  "user", "-d", "user-db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@domain.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5051:80"
    depends_on:
      postgres:
        condition: service_healthy
    # Define named volumes for persistent data storage


  user-service:
    build: user-service
    hostname: userservicehost
##    ports:
##      - "8081:8080"
#    environment:
#      #      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/user-db
#      - SPRING_DATASOURCE_USERNAME=user
#      - SPRING_DATASOURCE_PASSWORD=pwd
#      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
#      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      postgres:
        condition: service_healthy
#
#  mysql1:
#    image: 'mysql:latest'
#    environment:
#      - 'MYSQL_DATABASE=user-db'
#      - 'MYSQL_USER=user'
#      - 'MYSQL_PASSWORD=pwd'
#      - 'MYSQL_ROOT_PASSWORD=verysecretpwd'
#    ports:
#      - "3307:3306"
#    healthcheck:
#      test: [ "CMD", "mysqladmin", "ping", "-uuser", "-ppwd", "-h", "localhost" ]
#      interval: 10s
#      timeout: 5s
#      retries: 10



  mongo:
    image: mongo
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pwd
    healthcheck:
      test: [ "CMD", "mongosh", "--norc", "--quiet", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 10

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 5050:5050
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=user
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pwd
      - ME_CONFIG_MONGODB_SERVER=mongo #

  artist-service:
    build: artist-service
    hostname: artistservicehost
    depends_on:
      mongo:
        condition: service_healthy

  song-service:
    build: song-service
    hostname: songservicehost
#    ports:
#      - "8083:8080"
    #    environment:
    #      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql3:
        condition: service_healthy


  mysql3:
    image: 'mysql:latest'
    environment:
      - 'MYSQL_DATABASE=song-db'
      - 'MYSQL_USER=user'
      - 'MYSQL_PASSWORD=pwd'
      - 'MYSQL_ROOT_PASSWORD=verysecretpwd'
    ports:
      - "3309:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-uuser", "-ppwd", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10

  playlist-service:
    build: playlist-service
    hostname: playlistservicehost
#    ports:
#      - "8084:8080"
    #    environment:
    #      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql4:
        condition: service_healthy


  mysql4:
    image: 'mysql:latest'
    environment:
      - 'MYSQL_DATABASE=playlist-db'
      - 'MYSQL_USER=user'
      - 'MYSQL_PASSWORD=pwd'
      - 'MYSQL_ROOT_PASSWORD=verysecretpwd'
    ports:
      - "3310:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-uuser", "-ppwd", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10

  gateway:
    build: api-gateway-service
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - artist-service
      - song-service
      - playlist-service


  phpmyadmin:
    image: phpmyadmin:5.2.0
    container_name: PhpMyAdmin
    restart: always
    ports:
      - 5013:80
    environment:
      - PMA_ARBITRARY=1
    depends_on:
#      - mysql1
#      - mysql2
      - mysql3
      - mysql4
    networks:
      - default


volumes:
  pgdata:
  mongo:
  db_data:
  logs: